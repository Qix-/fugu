fg|fugu|fugue readme
Updated: 28 June 2011 (Ben Porter)

fg is a system for procedurally generating animated geometric forms in real-time. It is currently under heavy development and as such should not be used at all, by anyone, under any circumstances.

Building Instructions
=====================
First make sure you have the following dependencies:

CMake 2.8

fg uses CMake to build. As such, it should be possible to output project files for Xcode, Visual Studio, etc. Some build scripts are provided for some of these, to generate other projects you will need to write your own scripts (patches welcome!).


XCode
-----
> ./xcode-build.sh
> open build/xcode/FG.xcodeproj
> Select "install" target and run
> Open a terminal, cd to fg/bin/fgv and run "./fgv tests/basic5" for example

OSX/Make
--------
> ./osx-make-build.sh
> cd build/osx-make
> make install
> then e.g., "cd ../../bin/fgv; ./fgv tests/basic5"

Windows/MinGW/Eclipse
---------------------
> eclipse-msw-build.bat
> cd build\eclipse-msw
> make install
> cd ..\..\bin; fgv.exe tests\basic5

NB: The eclipse build script generates TWO eclipse projects. One in the root directory that contains all the source. And one in build\eclipse-msw that contains the targets. This discrepancy is due to the way eclipse works.

Directory Structure
===================
build/ generated by the build-script, will contain the project files and binaries after compilation
include/ and src/ contains the source, including some dependencies
scripts/ contains the fg lua scripts
lib/ contains compiled libraries of some dependencies
tools/ contains misc tools (e.g., a script for importing objs to blender for animation)


License
=======

See LICENSE for the current software license governing fg.

NOTE: vcg (a dependency of fg) is covered by the GPL, which means fg also has to be GPL. At some stage in the future, if a more liberal license is required, we will need to remove the vcg dependency and replace it with e.g., OpenMesh.

